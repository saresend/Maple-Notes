// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Firebase = require("firebase");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("SigninPage");

var horizontalStyle = {
  display: "flex",
  flexDirection: "row"
};

var leftBarStyle = {
  backgroundColor: "#ff9d84",
  display: "flex",
  height: "100vh",
  width: "40vw",
  alignItems: "center",
  flexDirection: "row",
  justifyContent: "flex-end"
};

var rightBarStyle = {
  backgroundColor: "#ffffff",
  display: "flex",
  height: "100vh",
  width: "60vw",
  alignItems: "center",
  flexDirection: "row",
  justifyContent: "flex-start"
};

var leftLoginBlockStyle = {
  backgroundColor: "#ff9d84",
  display: "flex",
  height: "80vh",
  verticalAlign: "super",
  width: "30vw",
  boxShadow: "0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)",
  alignItems: "center",
  flexDirection: "column",
  justifyContent: "center"
};

var logoTitleStyle = {
  color: "#ffffff",
  fontSize: "30px",
  margin: "5px"
};

var logoStyle = {
  color: "#ffffff",
  fontSize: "50px"
};

var rightLoginBlockStyle = {
  backgroundColor: "#ffffff",
  display: "flex",
  height: "80vh",
  verticalAlign: "super",
  width: "50vw",
  boxShadow: "0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)",
  alignItems: "center",
  flexDirection: "column",
  justifyContent: "center"
};

var signinTitleStyle = {
  color: "#939393",
  fontSize: "30px",
  marginBottom: "5px"
};

var inputStyle = {
  borderBottom: "1px solid gray",
  display: "block",
  fontSize: "17px",
  marginTop: "20px",
  width: "200px"
};

var buttonStyle = {
  backgroundColor: "#1ae5b6",
  border: "0px",
  color: "#ffffff",
  fontFamily: "Aleo",
  fontSize: "17px",
  marginTop: "20px",
  outline: "0px",
  padding: "8px",
  width: "200px",
  borderRadius: "3px"
};

function make(dispatch, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          style: horizontalStyle
                        }, React.createElement("div", {
                              style: leftBarStyle
                            }, React.createElement("div", {
                                  style: leftLoginBlockStyle
                                }, React.createElement("i", {
                                      className: "fab fa-pagelines",
                                      style: logoStyle
                                    }), React.createElement("p", {
                                      style: logoTitleStyle
                                    }, "Maple"))), React.createElement("div", {
                              style: rightBarStyle
                            }, React.createElement("div", {
                                  style: rightLoginBlockStyle
                                }, React.createElement("p", {
                                      style: signinTitleStyle
                                    }, "Sign In"), React.createElement("input", {
                                      style: inputStyle,
                                      placeholder: "Email",
                                      onChange: (function (_data) {
                                          var email = ( _data.target.value );
                                          return Curry._1(self[/* send */3], /* EmailChange */Block.__(0, [email]));
                                        })
                                    }), React.createElement("input", {
                                      style: inputStyle,
                                      placeholder: "Password",
                                      onChange: (function (_data) {
                                          var password = ( _data.target.value );
                                          return Curry._1(self[/* send */3], /* PasswordChange */Block.__(1, [password]));
                                        })
                                    }), React.createElement("button", {
                                      className: "hover",
                                      style: buttonStyle
                                    }, "Log In"), React.createElement("button", {
                                      className: "hover",
                                      style: buttonStyle,
                                      onClick: (function (_data) {
                                          var config = {
                                            apiKey: "AIzaSyC-s0dwO0vw1QU7st911o8iBw9VVlIZ1uY",
                                            authDomain: "maple-notes.firebaseapp.com",
                                            databaseURL: "https://maple-notes.firebaseio.com",
                                            storageBucket: "maple-notes.appspot.com",
                                            messagingSenderId: "169600693604"
                                          };
                                          var app = Firebase.initializeApp(config);
                                          var authObj = app.auth();
                                          var fbPromise = authObj.createUserWithEmailAndPassword(self[/* state */1][/* email */0], self[/* state */1][/* password */1]);
                                          fbPromise.then((function (_value) {
                                                    return Promise.resolve(Curry._1(dispatch, /* SignInUserSuccessfully */Block.__(0, ["uhhh"])));
                                                  })).catch((function (err) {
                                                  return Promise.resolve((console.log(err), /* () */0));
                                                }));
                                          return /* () */0;
                                        })
                                    }, "Sign Up"))));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* email */"",
                      /* password */"",
                      /* didSubmit */false
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                return /* Update */Block.__(0, [/* record */[
                            /* email */state[/* email */0],
                            /* password */state[/* password */1],
                            /* didSubmit */true
                          ]]);
              } else if (action.tag) {
                return /* Update */Block.__(0, [/* record */[
                            /* email */state[/* email */0],
                            /* password */action[0],
                            /* didSubmit */state[/* didSubmit */2]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* email */action[0],
                            /* password */state[/* password */1],
                            /* didSubmit */state[/* didSubmit */2]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.horizontalStyle = horizontalStyle;
exports.leftBarStyle = leftBarStyle;
exports.rightBarStyle = rightBarStyle;
exports.leftLoginBlockStyle = leftLoginBlockStyle;
exports.logoTitleStyle = logoTitleStyle;
exports.logoStyle = logoStyle;
exports.rightLoginBlockStyle = rightLoginBlockStyle;
exports.signinTitleStyle = signinTitleStyle;
exports.inputStyle = inputStyle;
exports.buttonStyle = buttonStyle;
exports.make = make;
/* component Not a pure module */
