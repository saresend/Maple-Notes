// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var shared = [
  "width",
  "opacity"
];

var component = ReasonReact.statelessComponent("NoteElementRe");

var textStyle = {
  color: "#aaaaaa",
  margin: "7px",
  marginLeft: "15px"
};

var countStyle = {
  color: "#48d3f2",
  margin: "7px",
  marginRight: "0px",
  opacity: "1.0"
};

var containerStyle = {
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between"
};

var iconContainerStyle = {
  display: "flex",
  alignItems: "center",
  flexDirection: "row"
};

var iconStyle = {
  color: "#aaaaaa",
  fontSize: "18px"
};

var class_tables = [
  0,
  0,
  0
];

var class_tables$1 = [
  0,
  0,
  0
];

function make(info, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              if (!class_tables$1[0]) {
                var $$class = CamlinternalOO.create_table(shared);
                var env = CamlinternalOO.new_variable($$class, "");
                var ids = CamlinternalOO.get_method_labels($$class, shared);
                var width = ids[0];
                var opacity = ids[1];
                CamlinternalOO.set_methods($$class, /* array */[
                      width,
                      (function (self$1) {
                          return 10;
                        }),
                      opacity,
                      (function (self$1) {
                          return 1.0;
                        })
                    ]);
                var env_init = function (env$1) {
                  var self = CamlinternalOO.create_object_opt(0, $$class);
                  self[env] = env$1;
                  return self;
                };
                CamlinternalOO.init_class($$class);
                class_tables$1[0] = env_init;
              }
              Curry._1(class_tables$1[0], 0);
              if (!class_tables[0]) {
                var $$class$1 = CamlinternalOO.create_table(shared);
                var env$1 = CamlinternalOO.new_variable($$class$1, "");
                var ids$1 = CamlinternalOO.get_method_labels($$class$1, shared);
                var width$1 = ids$1[0];
                var opacity$1 = ids$1[1];
                CamlinternalOO.set_methods($$class$1, /* array */[
                      width$1,
                      (function (self$2) {
                          return 100;
                        }),
                      opacity$1,
                      (function (self$2) {
                          return 0.5;
                        })
                    ]);
                var env_init$1 = function (env$2) {
                  var self = CamlinternalOO.create_object_opt(0, $$class$1);
                  self[env$1] = env$2;
                  return self;
                };
                CamlinternalOO.init_class($$class$1);
                class_tables[0] = env_init$1;
              }
              Curry._1(class_tables[0], 0);
              var match = info[/* noteType */2];
              var icon;
              switch (match) {
                case 0 : 
                    icon = React.createElement("i", {
                          className: "far fa-folder",
                          style: iconStyle
                        });
                    break;
                case 1 : 
                    icon = React.createElement("i", {
                          className: "far fa-file-alt",
                          style: iconStyle
                        });
                    break;
                case 2 : 
                    icon = React.createElement("i", {
                          className: "far fa-trash-alt",
                          style: iconStyle
                        });
                    break;
                case 3 : 
                    icon = React.createElement("i", {
                          className: "far fa-bookmark",
                          style: iconStyle
                        });
                    break;
                
              }
              return React.createElement("div", {
                          className: "hover",
                          style: containerStyle
                        }, React.createElement("div", {
                              style: iconContainerStyle
                            }, icon, React.createElement("p", {
                                  style: textStyle
                                }, info[/* title */0])), React.createElement("p", {
                              style: countStyle
                            }, info[/* numNotes */1].toString()));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.textStyle = textStyle;
exports.countStyle = countStyle;
exports.containerStyle = containerStyle;
exports.iconContainerStyle = iconContainerStyle;
exports.iconStyle = iconStyle;
exports.make = make;
/* component Not a pure module */
